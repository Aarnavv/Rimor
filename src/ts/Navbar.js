import * as React from "react";
import '../css/navbar.css';
import { ProjectIcon } from '../svgIcons/projectSVGIconComponent';
import * as ActionIcons from '../svgIcons/actionButtons';
import { FolderComponent } from "./folderStruct";
import { TSXFile, IOFile, BATFile, SYSFile, MDFile, GUIFile } from "./fileStruct";
export default class Navbar extends React.Component {
    render() {
        return (React.createElement("div", { className: "navbar" },
            React.createElement("div", { className: "header" },
                React.createElement("div", { className: "title" }, "Vagus"),
                React.createElement("div", { className: "description" }, "{\"Latin\":\"wandering\",\"purpose\":\"algorithms\"}")),
            React.createElement("div", { className: "project" },
                React.createElement(ProjectIcon, null),
                React.createElement("p", { className: "project-title" }, "Project"),
                React.createElement("div", { className: "buttons" },
                    React.createElement(ActionIcons.StopButtonIcon, null),
                    React.createElement(ActionIcons.PrevButtonIcon, null),
                    React.createElement(ActionIcons.RunButtonIcon, null))),
            React.createElement("div", { className: "folder-panel" },
                React.createElement(FolderComponent, { colorOfFolder: "#EF5350", text: "Vagus-master", divClassName: "folder", arrowID: "vagus-master-arrow" },
                    React.createElement(FolderComponent, { colorOfFolder: "#EF5350", text: "advanced-control-panel", divClassName: "folder", arrowID: "advanced-cp-arrow" },
                        React.createElement(FolderComponent, { colorOfFolder: "#D5756C", text: "algorithms", divClassName: "folder", arrowID: "algorithms-arrow" },
                            React.createElement("div", null,
                                React.createElement(TSXFile, { divClassName: "file", pClassName: "tsx-name file-name", text: "aStarSearch.tsx" }),
                                React.createElement(TSXFile, { divClassName: "file", pClassName: "tsx-name file-name", text: "djikstrasSearch.tsx" }),
                                React.createElement(TSXFile, { divClassName: "file", pClassName: "tsx-name file-name", text: "bellmanFord.tsx" }),
                                React.createElement(TSXFile, { divClassName: "file", pClassName: "tsx-name file-name", text: "breadthFirstSearch.tsx" }),
                                React.createElement(TSXFile, { divClassName: "file", pClassName: "tsx-name file-name", text: "depthFirstSearch.tsx" }),
                                React.createElement(TSXFile, { divClassName: "file", pClassName: "tsx-name file-name", text: "biDirectionalSearch.tsx" }),
                                React.createElement(TSXFile, { divClassName: "file", pClassName: "tsx-name file-name", text: "floydWarshallSearch.tsx" }),
                                React.createElement(TSXFile, { divClassName: "file", pClassName: "tsx-name file-name", text: "johnsonsAlgorithm.tsx" }))),
                        React.createElement(FolderComponent, { colorOfFolder: "#67BBFF", text: "addableNodes", divClassName: "folder", arrowID: "addable-arrow" },
                            React.createElement("div", null,
                                React.createElement(IOFile, { divClassName: "file", pClassName: "node-name file-name", text: "weigthNode.io" }),
                                React.createElement(IOFile, { divClassName: "file", pClassName: "node-name file-name", text: "bombNode.io" }),
                                React.createElement(IOFile, { divClassName: "file", pClassName: "node-name file-name", text: "wallNode.io" }))),
                        React.createElement(FolderComponent, { colorOfFolder: "#4CAF50", text: "mazes", divClassName: "folder", arrowID: "mazes-arrow" },
                            React.createElement("div", null,
                                React.createElement(BATFile, { divClassName: "file", pClassName: "maze-name file-name", text: "none.bat" }),
                                React.createElement(BATFile, { divClassName: "file", pClassName: "maze-name file-name", text: "gridMaze.bat" }),
                                React.createElement(BATFile, { divClassName: "file", pClassName: "maze-name file-name", text: "randomMaze.bat" }),
                                React.createElement(BATFile, { divClassName: "file", pClassName: "maze-name file-name", text: "diagonalCutMaze.bat" }))),
                        React.createElement(FolderComponent, { colorOfFolder: "#E5C07B", text: "speeds", divClassName: "folder", arrowID: "speeds-arrow" },
                            React.createElement("div", null,
                                React.createElement(SYSFile, { divClassName: "file", pClassName: "speed-1 file-name", text: "100percent.sys" }),
                                React.createElement(SYSFile, { divClassName: "file", pClassName: "speed-1 file-name", text: "50percent.sys" }),
                                React.createElement(SYSFile, { divClassName: "file", pClassName: "speed-1 file-name", text: "25percent.sys" })))),
                    React.createElement(FolderComponent, { colorOfFolder: "#EF5350", text: "legend", divClassName: "folder", arrowID: "legend-arrow" },
                        React.createElement("div", null,
                            React.createElement(GUIFile, { divClassName: "file", pClassName: "legend-1 file-name", text: "bombNode.gui", type: "bomb" }),
                            React.createElement(GUIFile, { divClassName: "file", pClassName: "legend-1 file-name", text: "shortestPathNode.gui", type: "shortest-path" }),
                            React.createElement(GUIFile, { divClassName: "file", pClassName: "legend-1 file-name", text: "wallNode.gui", type: "wall" }),
                            React.createElement(GUIFile, { divClassName: "file", pClassName: "legend-1 file-name", text: "visitedNode.gui", type: "visited" }),
                            React.createElement(GUIFile, { divClassName: "file", pClassName: "legend-1 file-name", text: "unvisitedNode.gui", type: "unvisited" }),
                            React.createElement(GUIFile, { divClassName: "file", pClassName: "legend-1 file-name", text: "startNode.gui", type: "start-node" }),
                            React.createElement(GUIFile, { divClassName: "file", pClassName: "legend-1 file-name", text: "endNode.gui", type: "end-node" }),
                            React.createElement(GUIFile, { divClassName: "file", pClassName: "legend-1 file-name", text: "weightNode.gui", type: "weight" }))),
                    React.createElement(MDFile, { divClassName: "folder-less-file file", pClassName: "file-name", text: "README.md" })))));
    }
}
